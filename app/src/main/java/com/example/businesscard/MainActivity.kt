package com.example.businesscardimport android.os.Bundleimport androidx.activity.ComponentActivityimport androidx.activity.compose.setContentimport androidx.compose.foundation.BorderStrokeimport androidx.compose.foundation.Imageimport androidx.compose.foundation.borderimport androidx.compose.foundation.layout.Arrangementimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.foundation.layout.widthimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.rounded.Callimport androidx.compose.material.icons.rounded.MailOutlineimport androidx.compose.material.icons.rounded.Personimport androidx.compose.material3.Iconimport androidx.compose.material3.MaterialThemeimport androidx.compose.material3.Surfaceimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.draw.drawBehindimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.graphics.RectangleShapeimport androidx.compose.ui.graphics.vector.ImageVectorimport androidx.compose.ui.layout.ContentScaleimport androidx.compose.ui.res.painterResourceimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.text.style.TextAlignimport androidx.compose.ui.tooling.preview.Previewimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport com.example.businesscard.ui.theme.BusinessCardThemeclass MainActivity : ComponentActivity() {    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContent {            BusinessCardTheme {                // A surface container using the 'background' color from the theme                Surface(                    modifier = Modifier.fillMaxSize(), color = MaterialTheme.colorScheme.background                ) {                    Home()                }            }        }    }}@Composablefun Home() {    Column(        verticalArrangement = Arrangement.Center, modifier = Modifier            .padding(8.dp)            .fillMaxSize()    ) {        Image(            painter = painterResource(R.drawable.img_6656),            contentDescription = "",            contentScale = ContentScale.Crop,            modifier = Modifier                .size(150.dp)                .align(alignment = Alignment.CenterHorizontally)        )        Text(            text = "Gabriel G. Freitas",            fontSize = 35.sp,            lineHeight = 35.sp,            modifier = Modifier.align(Alignment.CenterHorizontally)        )        Text(            text = "Desenvolvedor (futuro native android engineer)",            fontWeight = FontWeight.Bold,            modifier = Modifier.align(Alignment.CenterHorizontally)        )    }    Column(        verticalArrangement = Arrangement.Bottom,        modifier = Modifier            .padding(8.dp)            .fillMaxSize(),        horizontalAlignment = Alignment.CenterHorizontally    ) {        ContactDetails(            icon = Icons.Rounded.Call,            text = "+55 51 98053-1948",            modifier = Modifier                .align(alignment = Alignment.CenterHorizontally)                .fillMaxWidth()                .padding(0.dp, 5.dp)        )        ContactDetails(            icon = Icons.Rounded.Person,            text = "@gabrielgoncalfreitas",            modifier = Modifier                .align(alignment = Alignment.CenterHorizontally)                .fillMaxWidth()                .padding(0.dp, 5.dp)        )        ContactDetails(            icon = Icons.Rounded.MailOutline,            text = "gabriel.goncal.freitas@gmail.com",            modifier = Modifier                .align(alignment = Alignment.CenterHorizontally)                .fillMaxWidth()                .padding(0.dp, 5.dp)        )    }}@Composablefun ContactDetails(icon: ImageVector, text: String, modifier: Modifier = Modifier) {    Row(        modifier = modifier,    ) {        Icon(            imageVector = icon,            contentDescription = "",            modifier = Modifier                .align(alignment = Alignment.CenterVertically)                .padding(50.dp, 0.dp, 0.dp, 0.dp)        )        Text(            text = text,            textAlign = TextAlign.Center,            modifier = Modifier                .padding(5.dp)                .width(275.dp)        )    }    Spacer(        modifier = Modifier            .height(5.dp)    )}@Preview(showBackground = true)@Composablefun HomePreview() {    BusinessCardTheme {        Home()    }}